$ vi ~/.bash_profile

$ brew install pyenv
$ brew  install python
$ pip3 install virtualenv virtualenvwrapper

# 1.1. Prerequisites - If you don't have Git, install it
# $ brew install git

#   Most installation problems on macOS are related to loading and linking OpenSSL and zlib. 
$ brew install zlib openssl readline
$ CFLAGS="-I$(brew --prefix openssl)/include -I$(brew --prefix readline)/include -I$(xcrun --show-sdk-path)/usr/include" LDFLAGS="-L$(brew --prefix openssl)/lib -L$(brew --prefix readline)/lib -L$(brew --prefix zlib)/lib"

# 2.1. Clone this repository
$ git clone https://github.com/aws/aws-elastic-beanstalk-cli-setup.git

# 4.1 If you already have Python installed on your system, after step 2.1., run the following.
$ python aws-elastic-beanstalk-cli-setup/scripts/ebcli_installer.py

# Note: To complete installation, ensure `eb` is in PATH. You can ensure this by executing (For zsh, default shell in macos):
$ echo 'export PATH="/Users/nitinsinghal/.ebcli-virtual-env/executables:$PATH"' >> ~/.zshenv && source ~/.zshenv

#create the folder ebdeploy
$ mkdir ebdeploy

$ ~/ebdeploy eb init
$ git init

# Call the model deployment python file as application.py to avoid flask error
$ cp /Users/nitinsinghal/DataScienceCourse/Part1-MachineLearningDataAnalytics/Examples/Chapter12_DeployAWSCloud/Chapter12_DeployAWSElasticBeanstalk.py /Users/nitinsinghal/ebdeploy/application.py

$ cp /Users/nitinsinghal/DataScienceCourse/Part1-MachineLearningDataAnalytics/Examples/Chapter12_DeployAWSCloud/Procfile /Users/nitinsinghal/ebdeploy/ 

# Create an empty __init__.py file to avoid package path errors
$ cp /Users/nitinsinghal/DataScienceCourse/Part1-MachineLearningDataAnalytics/Examples/Chapter12_DeployAWSCloud/__init__.py /Users/nitinsinghal/ebdeploy/ 

# If below are missing install. Remove gunicorn if installed
$ pip uninstall gunicorn
$ pip install uWSGI
$ pip install scikit-learn

$ pip list --format=freeze > requirements.txt

# remove anaconda and conda related packages from requirements.txt file 
# as pip has old versions and cannot install the latest you might be using (via conda install)
# Check other unwanted packages (clyent, mkl-fft, etc) that give ERRORS and DELETE them too

$ git add . 
$ git commit -m â€œebdsmodeldeploy application"

$ eb create 
$ eb status

$ eb deploy

$ eb open

# If eb create fails due to codecommit or other issues start again
# $ rm -rf .ebcli-virtual-env
# $ rm -rf .git
# $ rm -rf ebdeploy

